@model osVodigiWeb6x.Models.Screen

@{
    ViewBag.Title = "Wizard";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        $("input:text:visible:first").focus();
    });
    function AddToScreen() {
        var contenttext = $("#lstScreenContent option:selected").text();
        var contentid = $("#lstScreenContent option:selected").val();
        var option = new Option(contenttext, contentid, false, false);
        $('#lstScreenScreenContent').append(option);
        PopulateContentStore();
    }
    function RemoveFromScreen() {
        $("#lstScreenScreenContent option:selected").remove();
        PopulateContentStore();
    }
    function MoveItemUp() {
        $('#lstScreenScreenContent option:selected').each(function () {
            $(this).insertBefore($(this).prev());
        });
        PopulateContentStore();
    }
    function MoveItemDown() {
        $('#lstScreenScreenContent option:selected').each(function () {
            $(this).insertAfter($(this).next());
        });
        PopulateContentStore();
    }
    function PopulateContentStore() {
        var content = '';
        $('#lstScreenScreenContent > option').each(function () {
            content += '|' + this.value;
        });
        $('#txtScreenScreenContent').attr("value", content);
    }
</script>

<br />
<div class="textblock">
    <table class="instructions">
        <tr>
            <td style="width:100px;"><img src="~/Images/screen-icon.png" alt="" style="border-radius:8px 8px;" /></td>
            <td>
                <span class="paragraphheader">Screen Wizard - Step 4: Interactive Screen Content</span><br />
                <span class="paragraphtext">Please select the interactive screen content for this screen.</span>
            </td>
        </tr>
    </table>
</div>
<br />
@using (Html.BeginForm())
{

    <table class="formtable" style="border-spacing:0;border-collapse:collapse;" role="presentation">
        <tr>
            <td class="formheader" colspan="2">Interactive Screen Content</td>
        </tr>
        <tr>
            <td class="formprimary" style="vertical-align: top;height:250px;">
                <b>Available Screen Content</b><br />
                @Html.DropDownList("lstScreenContent", (SelectList)ViewData["ScreenContentList"], new { @style = "width:320px;", size = 15 })
                <span class="addcontenttoscreen" onclick="AddToScreen();">Add-></span>
            </td>
            <td class="formprimary" style="vertical-align: top;height:250px;">
                <b>Assigned Content</b>
                <span class="modifyscreenscreencontentlist" onclick="RemoveFromScreen();" style="margin-left: 30px;">Remove</span>
                <span class="modifyscreenscreencontentlist" onclick="MoveItemUp();">Move Up</span>
                <span class="modifyscreenscreencontentlist" onclick="MoveItemDown();">Move Down</span>
                <br />
                @Html.DropDownList("lstScreenScreenContent", (SelectList)ViewData["ScreenScreenContentList"], new { @style = "width:320px;", size = 15 })
            </td>
        </tr>
        <tr>
            <td class="formfooter" colspan="2"><div id="returnlink"><input type="submit" value="Finish" style="width:75px;" />@Html.ActionLink("< Previous Step", "Step3", "ScreenWizard", new { id = ViewData["ScreenID"].ToString() }, "")</div></td>
        </tr>
    </table>
    <div class="formfootnote"><span class="required">*</span> indicates a required field.</div>
    <br />
    <div class="errormessage">@Html.Raw((string)ViewData["ValidationMessage"])</div>
    @Html.Hidden("txtMainFeatureType", ViewData["MainFeatureType"])
    @Html.Hidden("txtImageFolder", ViewData["ImageFolder"])
    @Html.HiddenFor(model => model.ScreenID);
    @Html.HiddenFor(model => model.ScreenName);
    @Html.HiddenFor(model => model.ScreenDescription);
    @Html.HiddenFor(model => model.SlideShowID);
    @Html.HiddenFor(model => model.PlayListID);
    @Html.HiddenFor(model => model.TimelineID);    
    @Html.HiddenFor(model => model.ButtonImageID);
    @Html.HiddenFor(model => model.IsInteractive);
    @Html.HiddenFor(model => model.IsActive);
    @Html.Hidden("txtScreenScreenContent", ViewData["ScreenScreenContent"])

}

<br /><br />